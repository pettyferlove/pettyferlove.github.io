<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>本地Hexo自动部署构建自己的博客（腾讯云）</title>
    <url>/2019/10/15/blog/build-deploy-blog/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文旨在使用Hexo开发自己得博客，同时利用git hook机制实现自动化部署。<br>下文涉及到服务器端命令均使用CentOS 7，开发环境为Windows10 1903</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装Git-本地和服务器端"><a href="#安装Git-本地和服务器端" class="headerlink" title="安装Git 本地和服务器端"></a>安装Git <code>本地和服务器端</code></h2><ul>
<li>Windows：下载并安装 <a href="https://git-scm.com/downloads">git</a></li>
<li>Mac：使用 Homebrew ：<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ brew install git</span><br></pre></td></tr></tbody></table></figure></li>
<li>Linux (Ubuntu, Debian)：<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ sudo apt-get install git-core</span><br></pre></td></tr></tbody></table></figure></li>
<li>Linux (Fedora, Red Hat, CentOS)：<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ sudo yum install git-core</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h2 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h2><h3 id="安装Node-js-本地安装"><a href="#安装Node-js-本地安装" class="headerlink" title="安装Node.js 本地安装"></a>安装<a href="https://npm.taobao.org/mirrors/node/v12.12.0/node-v12.12.0-x64.msi">Node.js</a> <code>本地安装</code></h3><p><a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a></p>
<h3 id="安装Nginx-服务器安装"><a href="#安装Nginx-服务器安装" class="headerlink" title="安装Nginx 服务器安装"></a>安装Nginx <code>服务器安装</code></h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># Yum安装Nginx</span><br><span class="line">$ sudo yum install -y nginx</span><br><span class="line"></span><br><span class="line"># 启动Nginx</span><br><span class="line">$ sudo systemctl start nginx.service</span><br><span class="line"></span><br><span class="line"># 自动启动Nginx</span><br><span class="line">$ sudo systemctl enable nginx.service</span><br></pre></td></tr></tbody></table></figure>
<h3 id="安装Hexo-本地安装"><a href="#安装Hexo-本地安装" class="headerlink" title="安装Hexo 本地安装"></a>安装Hexo <code>本地安装</code></h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure>


<h2 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h2><h3 id="Git相关设置-服务器端"><a href="#Git相关设置-服务器端" class="headerlink" title="Git相关设置 服务器端"></a>Git相关设置 <code>服务器端</code></h3><p>添加git用户</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ useradd git</span><br><span class="line">$ passwd `你的git密码`</span><br></pre></td></tr></tbody></table></figure>

<p>创建一个私有git仓库</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ sudo mkdir /var/repo/</span><br><span class="line">$ sudo chown -R git:root /var/repo/</span><br><span class="line">$ sudo chmod -R 755 /var/repo/</span><br><span class="line"></span><br><span class="line">$ cd /var/repo/</span><br><span class="line">$ git init --bare hexo_remote.git</span><br></pre></td></tr></tbody></table></figure>

<p>创建一个Hexo静态文件夹</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ sudo mkdir /var/repo/hexo</span><br></pre></td></tr></tbody></table></figure>

<h3 id="SSH配置-本地和服务器端"><a href="#SSH配置-本地和服务器端" class="headerlink" title="SSH配置 本地和服务器端"></a>SSH配置 <code>本地和服务器端</code></h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># 生成ssh key</span><br><span class="line">ssh-keygen -t rsa -C "xxxxx@xxxxx.com"</span><br><span class="line"># 复制ssh到云服务器</span><br><span class="line">ssh-copy-id -i .ssh/id_rsa.pub  git@服务器ip或域名</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Nginx配置-服务器端"><a href="#Nginx配置-服务器端" class="headerlink" title="Nginx配置 服务器端"></a>Nginx配置 <code>服务器端</code></h3><p>查找Nginx配置文件目录</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ nginx -t</span><br><span class="line"></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br></pre></td></tr></tbody></table></figure>

<p>修改Nginx配置文件</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ cd /etc/nginx</span><br><span class="line">$ vi nginx.conf</span><br><span class="line"></span><br><span class="line"># 增加以下配置</span><br><span class="line"></span><br><span class="line">server {</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  ip或者域名;</span><br><span class="line"></span><br><span class="line">    location / {</span><br><span class="line">        root   /var/repo/hexo; # 这里指向刚才创建得Hexo静态目录</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">       }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure>

<h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><blockquote>
<p>Hexo配置可参考<a href="https://hexo.io/zh-cn/docs/">官方配置</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 初始化之后得目录如下</span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></tbody></table></figure>

<p>修改Hexo开发配置</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># 安装deploy依赖</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># 修改deploy节点</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@ip:/var/repo/hexo_remote.git</span><br></pre></td></tr></tbody></table></figure>


<h1 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h1><blockquote>
<p>自动部署的机制是利用git hook在提交代码是自动触发用户自定义脚本来实现，git hook的其他用法可参考<a href="https://git-scm.com/docs/githooks.html">官方文档</a></p>
</blockquote>
<p>进入刚才创建的git仓库</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ cd /var/repo/hexo_remote.git</span><br><span class="line"># 配置钩子</span><br><span class="line">$ vim post-receive</span><br></pre></td></tr></tbody></table></figure>

<p>增加以下代码</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/var/repo/hexo --git-dir=/var/repo/hexo_static.git checkout -f</span><br></pre></td></tr></tbody></table></figure>

<p>增加执行权限</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ chmod +x post-recevie </span><br></pre></td></tr></tbody></table></figure>

<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>执行以下命令则自动更新文件至服务器，随后可以访问地址查看</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>自动部署</category>
        <category>构建博客</category>
      </categories>
      <tags>
        <tag>Deploy</tag>
        <tag>自动部署</tag>
        <tag>Git Hook</tag>
      </tags>
  </entry>
  <entry>
    <title>ClamAV反病毒软件安装与使用</title>
    <url>/2019/08/08/linux/clamav-install/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;Linux服务器常用系统，以安全著称，不过随着市场占有量的增大，Linux病毒也存在病毒。而对于病毒，管理员手动分析进行查杀，除了手动分析查杀病毒外，还可以借助杀毒软件进行查杀，如同Windows都有杀毒软件一样，Linux系统发展至今也有不少优秀的反病毒软件，这里就不一一列举了。本文主要使用开源的<strong>ClamAV</strong>反病毒软件。</p>
<p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;<a href="http://www.clamav.net/">ClamAV</a> 官网 <a href="http://www.clamav.net/">http://www.clamav.net/</a></p>
<h1 id="安装以及使用"><a href="#安装以及使用" class="headerlink" title="安装以及使用"></a>安装以及使用</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 更新Epel仓库</span><br><span class="line">~$ yum -y install epel-releas</span><br><span class="line"></span><br><span class="line">// 安装ClamAV</span><br><span class="line">~$ yum install –y clamav clamav-update</span><br></pre></td></tr></tbody></table></figure>

<h2 id="更新病毒库"><a href="#更新病毒库" class="headerlink" title="更新病毒库"></a>更新病毒库</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">~$ freshclam</span><br></pre></td></tr></tbody></table></figure>

<h2 id="开始扫描"><a href="#开始扫描" class="headerlink" title="开始扫描"></a>开始扫描</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">clamscan [选项] [路径] [文件]</span><br><span class="line"></span><br><span class="line">--quiet   使用安静模式，仅仅打印出错误信息</span><br><span class="line"></span><br><span class="line">-i  仅仅打印被感染的文件</span><br><span class="line"></span><br><span class="line">-d &lt;文件&gt; 以指定的文件作为病毒库，一代替默认的/var/clamav目录下的病毒库文件</span><br><span class="line"></span><br><span class="line">-l &lt;文件&gt; 指定日志文件，以代替默认的/var/log/clamav/freshclam.log文件</span><br><span class="line"></span><br><span class="line">-r 递归扫描，即扫描指定目录下的子目录</span><br><span class="line"></span><br><span class="line">--move=&lt;目录&gt; 把感染病毒的文件移动到指定目录</span><br><span class="line"></span><br><span class="line">--remove 删除感染病毒的文件</span><br><span class="line"></span><br><span class="line">--exclude=&lt;目录&gt; 需要排除的目录</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>注意：如果扫描全盘可能会因为权限问题而打印很多警告信息，如果不是必要可以忽略/sys目录</p>
</blockquote>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 扫描/home并移除感染文件</span><br><span class="line">~$ clamscan --exclude=/sys/ -ri /home -l clamscan.log --remove</span><br><span class="line"></span><br><span class="line">----------- SCAN SUMMARY -----------</span><br><span class="line">Known viruses: 6260278</span><br><span class="line">Engine version: 0.101.2</span><br><span class="line">Scanned directories: 124</span><br><span class="line">Scanned files: 105</span><br><span class="line">Infected files: 0</span><br><span class="line">Data scanned: 12.73 MB</span><br><span class="line">Data read: 9.34 MB (ratio 1.36:1)</span><br><span class="line">Time: 42.754 sec (0 m 42 s)</span><br></pre></td></tr></tbody></table></figure>



<h2 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">1  4  * * *     /usr/local/clamav/bin/freshclam</span><br><span class="line">50 4  * * *     /usr/local/clamav/bin/clamscan -ri / -l /var/log/clamscan.log --move=/virus</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>系统安全</category>
      </categories>
      <tags>
        <tag>Security</tag>
        <tag>ClamAV</tag>
        <tag>反病毒</tag>
        <tag>系统安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Nacos 配置MySQL8.0持久化</title>
    <url>/2019/11/30/microservice/nacos-mysql8-0/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>官网下载的Nacos mysql由于驱动过低只支持5.X版本，使用8.X版本的mysql时无法正常启动</p>
<h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ul>
<li>克隆nacos源码（branch 1.0.0-RC3）<blockquote>
<p>master等分支也是同样修改方式</p>
</blockquote>
</li>
</ul>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ git clone https://github.com/alibaba/nacos.git</span><br><span class="line"></span><br><span class="line">$ git checkout 1.0.0-RC3</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><p>修改nacos项目根目录下的pom.xml，手动指定mysql驱动版本</p>
<blockquote>
<p>PS：这里要注意mysql驱动在nacos-naming和nacos-config两个模块引入过，如果不想修改主项目的pom文件这两个地方都要进行修改</p>
</blockquote>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&lt;!-- JDBC libs --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;!-- 这里使用8.0.9-rc，可根据实际情况调整 --&gt;</span><br><span class="line">    &lt;version&gt;8.0.9-rc&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>修改nacos-naming相关类</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 修改com.alibaba.nacos.naming.hanlthcheck.MysqlHealthCheckProcessor</span><br><span class="line"></span><br><span class="line">// 修改前</span><br><span class="line">import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;</span><br><span class="line"></span><br><span class="line">// 修改后</span><br><span class="line">import com.mysql.cj.jdbc.MysqlDataSource;</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>修改mysql连接参数</p>
<blockquote>
<p>mysql8.X版本需要指定时区等参数</p>
</blockquote>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 找到nacos-console下的src/main/resources/META-INF/nacos-default.properties 并修改db.url的数据库连接配置为</span><br><span class="line">characterEncoding=utf8&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span><br><span class="line"></span><br><span class="line">// 修改前</span><br><span class="line">db.url.0=jdbc:mysql://11.162.196.161:3306/diamond_devtest?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span><br><span class="line">db.url.1=jdbc:mysql://11.163.152.91:3306/diamond_devtest?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span><br><span class="line"></span><br><span class="line">// 修改后</span><br><span class="line">db.url.0=jdbc:mysql://11.162.196.161:3306/diamond_devtest?characterEncoding=utf8&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span><br><span class="line">db.url.1=jdbc:mysql://11.163.152.91:3306/diamond_devtest?characterEncoding=utf8&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h1 id="打包运行"><a href="#打包运行" class="headerlink" title="打包运行"></a>打包运行</h1><p>执行构建命令</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ mvn -Prelease-nacos -DskipTests clean install -U</span><br></pre></td></tr></tbody></table></figure>

<p>打包后的文件在distribution模块下的target目录，拷贝至定义好的目录并修改配置文件</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 找到nacos下的conf/application.properties 增加mysql数据源配置</span><br><span class="line"># mysql datasource</span><br><span class="line">spring.datasource.platform=mysql</span><br><span class="line">db.num=1</span><br><span class="line">db.url.0=jdbc:mysql://127.0.0.1:3306/nacos?characterEncoding=utf8&amp;zeroDateTimeBehavior=CONVERT_TO_NULL&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span><br><span class="line">db.user=root</span><br><span class="line">db.password=这是一个密码</span><br></pre></td></tr></tbody></table></figure>

<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>添加一条配置<br><img src="/images/microservice/nacos/nacos.png"></p>
<p>查询数据库<br><img src="/images/microservice/nacos/mysql-db.png"></p>
</body></html>]]></content>
      <categories>
        <category>Nacos</category>
      </categories>
      <tags>
        <tag>微服务</tag>
        <tag>Spring Cloud Alibaba</tag>
        <tag>Nacos</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL会话控制限制登录次数</title>
    <url>/2019/08/06/mysql/mysql-session-security/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;一般我们开发环境的MySQL是没有配置登录保护的，但仅限于开发环境，正式环境是不允许无限制登录，存在很大的风险。 </p>
<p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;MySQL 5.7 以后提供了Connection-Control插件用来控制客户端在登录操作连续失败一定次数后的响应的延迟。该插件可有效的防止客户端暴力登录的风险(攻击)。该插件包含以下两个组件：</p>
<ul>
<li>connection_control：控制失败次数以及延迟时间</li>
<li>connection_control_failed_login_attempts：将登录失败的操作记录至information_schema表</li>
</ul>
<h1 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h1><h2 id="增加配置文件"><a href="#增加配置文件" class="headerlink" title="增加配置文件"></a>增加配置文件</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">~$ vi /etc/my.cnf</span><br><span class="line"></span><br><span class="line">// 添加以下配置</span><br><span class="line">[mysqld]</span><br><span class="line">plugin-load-add                                 = connection_control.so</span><br><span class="line">connection-control                              = FORCE</span><br><span class="line">connection-control-failed-login-attempts        = FORCE</span><br><span class="line">connection_control_min_connection_delay         = 1000</span><br><span class="line">connection_control_max_connection_delay         = 86400</span><br><span class="line">connection_control_failed_connections_threshold = 3</span><br></pre></td></tr></tbody></table></figure>

<h2 id="执行安装命令"><a href="#执行安装命令" class="headerlink" title="执行安装命令"></a>执行安装命令</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">//使用root账户登录</span><br><span class="line">~$ mysql -u root -p</span><br><span class="line"></span><br><span class="line">mysql&gt; install plugin connection_control soname "connection_control.so";</span><br><span class="line">mysql&gt; install plugin connection_control_failed_login_attempts soname "connection_control.so";</span><br></pre></td></tr></tbody></table></figure>


<h2 id="验证插件安装状态"><a href="#验证插件安装状态" class="headerlink" title="验证插件安装状态"></a>验证插件安装状态</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; select plugin_name, plugin_status from information_schema.plugins where plugin_name like 'connection%';</span><br><span class="line"></span><br><span class="line">+------------------------------------------+---------------+</span><br><span class="line">| plugin_name                              | plugin_status |</span><br><span class="line">+------------------------------------------+---------------+</span><br><span class="line">| CONNECTION_CONTROL                       | ACTIVE        |</span><br><span class="line">| CONNECTION_CONTROL_FAILED_LOGIN_ATTEMPTS | ACTIVE        |</span><br><span class="line">+------------------------------------------+---------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h1 id="修改插件配置"><a href="#修改插件配置" class="headerlink" title="修改插件配置"></a>修改插件配置</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">~$ vi /etc/my.cnf</span><br><span class="line"></span><br><span class="line">// 修改以下配置，并重启MySQL</span><br><span class="line">// 阻塞一分钟</span><br><span class="line">connection_control_min_connection_delay         = 60000</span><br><span class="line">connection_control_max_connection_delay         = 86400</span><br><span class="line">// 可错误五次</span><br><span class="line">connection_control_failed_connections_threshold = 5</span><br></pre></td></tr></tbody></table></figure>


<h2 id="查看修改后配置"><a href="#查看修改后配置" class="headerlink" title="查看修改后配置"></a>查看修改后配置</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">~$ mysql -u root -p;</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like 'connection_control%';</span><br><span class="line"></span><br><span class="line">+-------------------------------------------------+------------+</span><br><span class="line">| Variable_name                                   | Value      |</span><br><span class="line">+-------------------------------------------------+------------+</span><br><span class="line">| connection_control_failed_connections_threshold | 5          |</span><br><span class="line">| connection_control_max_connection_delay         | 86400      |</span><br><span class="line">| connection_control_min_connection_delay         | 60000      |</span><br><span class="line">+-------------------------------------------------+------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>可以看到登录失败五次后再次尝试登录会阻塞<br><img src="/images/mysql/mysql-login.png"></p>
<h1 id="查看登录记录"><a href="#查看登录记录" class="headerlink" title="查看登录记录"></a>查看登录记录</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">mysql&gt; use information_schema;</span><br><span class="line"></span><br><span class="line">// 查看用户登录失败次数，当用户登录成功则删除记录</span><br><span class="line">mysql&gt; select * from connection_control_failed_login_attempts;</span><br><span class="line">// 连接控制的使用次数</span><br><span class="line">mysql&gt; show global status like 'connection_control_delay_generated';</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>系统安全</category>
      </categories>
      <tags>
        <tag>Security</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>spring boot devtools导致instanceof判断错误</title>
    <url>/2020/04/28/java/spring-boot/spring-boot-devtools-instanceof-bug/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>项目中引用spring-security与spring-session-data-redis来完成用户权限部分功能，同时也引入了导致问题发生的罪魁祸首spring-boot-devtools来解决代开始时代码了部署的问题。</p>
<blockquote>
<p>Spring的dev-tools为了实现重新装载class自己实现了一个类加载器，来加载项目中会改变的类，方便重启时将新改动的内容更新进来</p>
</blockquote>
<p>项目代码中使用了如下代码判断Authentication中的Principal是不是预期类型</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 判断逻辑中使用的CustomUserDetails的类加载器是spring-boot-devtools中的RestartClassLoader</span><br><span class="line">if (principal instanceof CustomUserDetails) {</span><br><span class="line">	// do something</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<p>但是实际开发过程中原本principal instanceof CustomUserDetails为true的结果却始终为false，进而导致后续逻辑异常。</p>
<h1 id="深入分析"><a href="#深入分析" class="headerlink" title="深入分析"></a>深入分析</h1><p>在产生异常之后对上述代码进行debug，但是整段逻辑并没有什么原则性问题；但是考虑到instanceof实现机制中有ClassLoader的判断（具体可查询订阅号instanceof实现机制），便转而考虑是否是ClassLoader不同导致判断不符合预期。在输出ClassLoader名称之后，发现两个ClassLoader不一样，进而导致判断异常。<br>通过深入研究代码发现spring-session-data-redis中的自动化配置类有如下逻辑</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration</span><br><span class="line"></span><br><span class="line">@Configuration(proxyBeanMethods = false)</span><br><span class="line">public class RedisHttpSessionConfiguration extends SpringHttpSessionConfiguration</span><br><span class="line">		implements BeanClassLoaderAware, EmbeddedValueResolverAware, ImportAware {</span><br><span class="line"></span><br><span class="line">    private RedisTemplate&lt;Object, Object&gt; createRedisTemplate() {</span><br><span class="line">        RedisTemplate&lt;Object, Object&gt; redisTemplate = new RedisTemplate&lt;&gt;();</span><br><span class="line">        redisTemplate.setKeySerializer(new StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashKeySerializer(new StringRedisSerializer());</span><br><span class="line"></span><br><span class="line">        // 设置默认序列化类</span><br><span class="line">        if (this.defaultRedisSerializer != null) {</span><br><span class="line">            redisTemplate.setDefaultSerializer(this.defaultRedisSerializer);</span><br><span class="line">        }</span><br><span class="line">        redisTemplate.setConnectionFactory(this.redisConnectionFactory);</span><br><span class="line">        redisTemplate.setBeanClassLoader(this.classLoader);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line">        return redisTemplate;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 同时项目有自定义序列化配置</span><br><span class="line">@Bean(name = "springSessionDefaultRedisSerializer")</span><br><span class="line">public JdkSerializationRedisSerializer getGenericJackson2JsonRedisSerializer() {</span><br><span class="line">    // 注意此时没有通过构造函数制定ClassLoader，会使用用户定义的初始化器，最后使用JVM默认的ExtClassLoader</span><br><span class="line">    return new JdkSerializationRedisSerializer();</span><br><span class="line">    // 修改为如下代码则正常使用</span><br><span class="line">    // return new JdkSerializationRedisSerializer(this.getClass().getClassLoader());</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>以上两段代码最终会导致获取Session时CustomUserDetails的加载器为JVM默认的ClassLoader，而代码中用到的CustomUserDetails是spring-boot-devtools的ClassLoader</p>
<h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>不制定序列化类，由RedisHttpSessionConfiguration自动装配的时候指定</p>
<h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><p>在指定JdkSerializationRedisSerializer的同时需指定ClassLoader</p>
<h2 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h2><p>不使用spring-boot-devtools</p>
</body></html>]]></content>
      <categories>
        <category>异常解决</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 集群部署（CentOS 7）</title>
    <url>/2020/06/08/devops/kubernetes/cluster-deploy-centos7/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://kubernetes.io/zh">https://kubernetes.io/zh</a></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h1 id="设置集群Host"><a href="#设置集群Host" class="headerlink" title="设置集群Host"></a>设置集群Host</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">$ vim /etc/hosts</span><br><span class="line"></span><br><span class="line">192.168.13.57   sb-k8s-master</span><br><span class="line">192.168.13.61   sb-k8s-node1</span><br><span class="line">192.168.13.87   sb-k8s-node2</span><br><span class="line"></span><br><span class="line">// 修改完毕重置网络</span><br><span class="line">$ /etc/init.d/network restart</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h1 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h1><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><blockquote>
<p>确保每个节点都安装Docker切版本保持一致<br>需注意Docker与Kubernetes版本兼容情况，具体可参考官方发布文档<br><a href="https://github.com/kubernetes/kubernetes/releases">https://github.com/kubernetes/kubernetes/releases</a></p>
</blockquote>
<ol>
<li>设置阿里云镜像源<br>wget -P /etc/yum.repos.d/ <a href="https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看docker历史版本</span></span><br><span class="line">$ yum list docker-ce --showduplicates | <span class="built_in">sort</span> -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定18.09版本</span></span><br><span class="line">$ yum install -y docker-ce-18.09.9-3.el7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果之前安装过旧版本的需要根据错误提示卸载旧版本依赖</span></span><br><span class="line">$ yum erase 依赖名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Docker</span></span><br><span class="line">$ systemctl start docker.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启动</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></tbody></table></figure>

<h1 id="关闭防火墙-1"><a href="#关闭防火墙-1" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">iptables --flush</span><br><span class="line">iptables -tnat --flush</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></tbody></table></figure>

<h1 id="安装Kubernetes"><a href="#安装Kubernetes" class="headerlink" title="安装Kubernetes"></a>安装Kubernetes</h1><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 设置Kubernetes repo</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装（指定版本1.16.10）</span></span><br><span class="line">$ yum install -y kubelet-1.16.10-0 kubeadm-1.16.10-0 kubectl-1.16.10-0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时禁用</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 永久禁用 </span></span><br><span class="line">vim /etc/selinux/config    <span class="comment"># 或者修改/etc/sysconfig/selinux</span></span><br><span class="line">SELINUX=disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时关闭swap</span></span><br><span class="line">swapoff -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久关闭swap</span></span><br><span class="line">修改 /etc/fstab 文件，注释掉 SWAP 的自动挂载（永久关闭swap，重启后生效）</span><br><span class="line">/dev/mapper/cl-swap     swap                    swap    defaults        0 0</span><br></pre></td></tr></tbody></table></figure>
<h2 id="安装版本锁定插件"><a href="#安装版本锁定插件" class="headerlink" title="安装版本锁定插件"></a>安装版本锁定插件</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install yum-plugin-versionlock.noarch -y</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum versionlock docker-ce*</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum versionlock kubeadm*</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum versionlock kubelet*</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum versionlock kubectl*</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="初始化Master节点"><a href="#初始化Master节点" class="headerlink" title="初始化Master节点"></a>初始化Master节点</h2><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ kubeadm init --kubernetes-version=1.16.10 \</span><br><span class="line">--apiserver-advertise-address=192.168.13.57 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16 --v=6</span><br></pre></td></tr></tbody></table></figure>
<p>初始化参数说明：</p>
<ul>
<li>–apiserver-advertise-address 指定master节点ip地址</li>
<li>–kubernetes-version 指定版本号，如果不指定则自动获取远程最新版本</li>
<li>–image-repository 指定镜像地址，默认k8s.gcr.io</li>
<li>–service-cidr<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">指定 Pod 网络的范围。Kubernetes 支持多种网络方案，而且不同网络方案对 --pod-network-cidr 有自己的要求，这里设置为 10.244.0.0/16 是因为我们将使用 flannel 网络方案，必须设置成这个 CIDR。</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<p>初始化过程如下：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">W0608 16:50:41.347380    4755 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]</span><br><span class="line">[init] Using Kubernetes version: v1.16.10</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">        [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/</span><br><span class="line">[preflight] Pulling images required for setting up a Kubernetes cluster</span><br><span class="line">[preflight] This might take a minute or two, depending on the speed of your internet connection</span><br><span class="line">[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'</span><br><span class="line">[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"</span><br><span class="line">[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"</span><br><span class="line">[kubelet-start] Starting the kubelet</span><br><span class="line">[certs] Using certificateDir folder "/etc/kubernetes/pki"</span><br><span class="line">[certs] Generating "ca" certificate and key</span><br><span class="line">[certs] Generating "apiserver" certificate and key</span><br><span class="line">[certs] apiserver serving cert is signed for DNS names [sb-k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.1.0.1 192.168.13.57]</span><br><span class="line">[certs] Generating "apiserver-kubelet-client" certificate and key</span><br><span class="line">[certs] Generating "front-proxy-ca" certificate and key</span><br><span class="line">[certs] Generating "front-proxy-client" certificate and key</span><br><span class="line">[certs] Generating "etcd/ca" certificate and key</span><br><span class="line">[certs] Generating "etcd/server" certificate and key</span><br><span class="line">[certs] etcd/server serving cert is signed for DNS names [sb-k8s-master localhost] and IPs [192.168.13.57 127.0.0.1 ::1]</span><br><span class="line">[certs] Generating "etcd/peer" certificate and key</span><br><span class="line">[certs] etcd/peer serving cert is signed for DNS names [sb-k8s-master localhost] and IPs [192.168.13.57 127.0.0.1 ::1]</span><br><span class="line">[certs] Generating "etcd/healthcheck-client" certificate and key</span><br><span class="line">[certs] Generating "apiserver-etcd-client" certificate and key</span><br><span class="line">[certs] Generating "sa" key and public key</span><br><span class="line">[kubeconfig] Using kubeconfig folder "/etc/kubernetes"</span><br><span class="line">[kubeconfig] Writing "admin.conf" kubeconfig file</span><br><span class="line">[kubeconfig] Writing "kubelet.conf" kubeconfig file</span><br><span class="line">[kubeconfig] Writing "controller-manager.conf" kubeconfig file</span><br><span class="line">[kubeconfig] Writing "scheduler.conf" kubeconfig file</span><br><span class="line">[control-plane] Using manifest folder "/etc/kubernetes/manifests"</span><br><span class="line">[control-plane] Creating static Pod manifest for "kube-apiserver"</span><br><span class="line">[control-plane] Creating static Pod manifest for "kube-controller-manager"</span><br><span class="line">W0608 16:51:44.821102    4755 manifests.go:225] the default kube-apiserver authorization-mode is "Node,RBAC"; using "Node,RBAC"</span><br><span class="line">[control-plane] Creating static Pod manifest for "kube-scheduler"</span><br><span class="line">W0608 16:51:44.822370    4755 manifests.go:225] the default kube-apiserver authorization-mode is "Node,RBAC"; using "Node,RBAC"</span><br><span class="line">[etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"</span><br><span class="line">[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s</span><br><span class="line">[apiclient] All control plane components are healthy after 21.003124 seconds</span><br><span class="line">[upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace</span><br><span class="line">[kubelet] Creating a ConfigMap "kubelet-config-1.18" in namespace kube-system with the configuration for the kubelets in the cluster</span><br><span class="line">[upload-certs] Skipping phase. Please see --upload-certs</span><br><span class="line">[mark-control-plane] Marking the node sb-k8s-master as control-plane by adding the label "node-role.kubernetes.io/master=''"</span><br><span class="line">[mark-control-plane] Marking the node sb-k8s-master as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]</span><br><span class="line">[bootstrap-token] Using token: 9jxb2u.hrx64uts2k9h147d</span><br><span class="line">[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to get nodes</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token</span><br><span class="line">[bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster</span><br><span class="line">[bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace</span><br><span class="line">[kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key</span><br><span class="line">[addons] Applied essential addon: CoreDNS</span><br><span class="line">[addons] Applied essential addon: kube-proxy</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.13.57:6443 --token 9jxb2u.hrx64uts2k9h147d \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:53bbba19451fe2a7d106fbde18e39f8772a3106d6a44b97cfe0653f18fbbd08d</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>如果节点初始化失败或者发生异常可以尝试重置节点</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">kubeadm reset</span><br></pre></td></tr></tbody></table></figure>


<p>结尾输出需要妥善保存，Worker节点需要使用</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ kubeadm <span class="built_in">join</span> 192.168.13.57:6443 --token 9jxb2u.hrx64uts2k9h147d \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:53bbba19451fe2a7d106fbde18e39f8772a3106d6a44b97cfe0653f18fbbd08d</span><br></pre></td></tr></tbody></table></figure>
<p>如果丢失以上信息可自己重新获取Token，如下</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 获取一个新的Token</span></span><br><span class="line">$ kubeadm token create --print-join-command</span><br></pre></td></tr></tbody></table></figure>

<h2 id="配置kubectl"><a href="#配置kubectl" class="headerlink" title="配置kubectl"></a>配置kubectl</h2><blockquote>
<p>kubectl 是管理 Kubernetes Cluster 的命令行工具，前面我们已经在所有的节点安装了 kubectl。Master 初始化完成后需要做一些配置工作，然后 kubectl 就能使用了。<br>  依照 kubeadm init 输出的最后提示，推荐用 Linux 普通用户执行 kubectl。</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#创建普通用户并设置密码123456</span></span><br><span class="line">useradd kubernetes &amp;&amp; <span class="built_in">echo</span> <span class="string">"kubernetes:123456"</span> | chpasswd kubernetes</span><br><span class="line"></span><br><span class="line"><span class="comment">#追加sudo权限,并配置sudo免密</span></span><br><span class="line">sed -i <span class="string">'/^root/a\kubernetes  ALL=(ALL)       NOPASSWD:ALL'</span> /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="comment">#保存集群安全配置文件到当前用户.kube目录</span></span><br><span class="line">su - kubernetes</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="comment">#启用 kubectl 命令自动补全功能（注销重新登录生效）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"source &lt;(kubectl completion bash)"</span> &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>查看集群节点状态</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$  kubectl get cs</span><br></pre></td></tr></tbody></table></figure>

<p>查看集群节点信息</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ kubectl get nodes </span><br><span class="line">NAME            STATUS     ROLES    AGE   VERSION</span><br><span class="line">sb-k8s-master   NotReady   master   31m   v1.16.10</span><br></pre></td></tr></tbody></table></figure>

<p>可以看到，当前只存在1个master节点，并且这个节点的状态是 NotReady。<br>使用 kubectl describe 命令来查看这个节点（Node）对象的详细信息、状态和事件（Event）：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Name:               sb-k8s-master</span><br><span class="line">Roles:              master</span><br><span class="line">Labels:             beta.kubernetes.io/arch=amd64</span><br><span class="line">                    beta.kubernetes.io/os=linux</span><br><span class="line">                    kubernetes.io/arch=amd64</span><br><span class="line">                    kubernetes.io/hostname=sb-k8s-master</span><br><span class="line">                    kubernetes.io/os=linux</span><br><span class="line">                    node-role.kubernetes.io/master=</span><br><span class="line">Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock</span><br><span class="line">                    node.alpha.kubernetes.io/ttl: 0</span><br><span class="line">                    volumes.kubernetes.io/controller-managed-attach-detach: true</span><br><span class="line">CreationTimestamp:  Mon, 08 Jun 2020 16:52:04 +0800</span><br><span class="line">Taints:             node-role.kubernetes.io/master:NoSchedule</span><br><span class="line">                    node.kubernetes.io/not-ready:NoSchedule</span><br><span class="line">Unschedulable:      false</span><br><span class="line">Lease:</span><br><span class="line">  HolderIdentity:  sb-k8s-master</span><br><span class="line">  AcquireTime:     &lt;unset&gt;</span><br><span class="line">  RenewTime:       Mon, 08 Jun 2020 17:25:14 +0800</span><br><span class="line">Conditions:</span><br><span class="line">  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message</span><br><span class="line">  ----             ------  -----------------                 ------------------                ------                       -------</span><br><span class="line">  MemoryPressure   False   Mon, 08 Jun 2020 17:22:31 +0800   Mon, 08 Jun 2020 16:52:00 +0800   KubeletHasSufficientMemory   kubelet has sufficient memory available</span><br><span class="line">  DiskPressure     False   Mon, 08 Jun 2020 17:22:31 +0800   Mon, 08 Jun 2020 16:52:00 +0800   KubeletHasNoDiskPressure     kubelet has no disk pressure</span><br><span class="line">  PIDPressure      False   Mon, 08 Jun 2020 17:22:31 +0800   Mon, 08 Jun 2020 16:52:00 +0800   KubeletHasSufficientPID      kubelet has sufficient PID available</span><br><span class="line">  Ready            False   Mon, 08 Jun 2020 17:22:31 +0800   Mon, 08 Jun 2020 16:52:00 +0800   KubeletNotReady              runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:docker: network plugin is not ready: cni config uninitialized</span><br><span class="line">Addresses:</span><br><span class="line">  InternalIP:  192.168.13.57</span><br><span class="line">  Hostname:    sb-k8s-master</span><br><span class="line">Capacity:</span><br><span class="line">  cpu:                8</span><br><span class="line">  ephemeral-storage:  92115Mi</span><br><span class="line">  hugepages-2Mi:      0</span><br><span class="line">  memory:             16265932Ki</span><br><span class="line">  pods:               110</span><br><span class="line">Allocatable:</span><br><span class="line">  cpu:                8</span><br><span class="line">  ephemeral-storage:  86930620273</span><br><span class="line">  hugepages-2Mi:      0</span><br><span class="line">  memory:             16163532Ki</span><br><span class="line">  pods:               110</span><br><span class="line">System Info:</span><br><span class="line">  Machine ID:                 04ea7a0036da499f9b9d787b0ca67450</span><br><span class="line">  System UUID:                4236130C-AAAD-8C66-59F0-78E272EB28E4</span><br><span class="line">  Boot ID:                    112aee9d-c68f-42ba-bf9e-7731290b412f</span><br><span class="line">  Kernel Version:             3.10.0-1127.10.1.el7.x86_64</span><br><span class="line">  OS Image:                   CentOS Linux 7 (Core)</span><br><span class="line">  Operating System:           linux</span><br><span class="line">  Architecture:               amd64</span><br><span class="line">  Container Runtime Version:  docker://19.3.11</span><br><span class="line">  Kubelet Version:            v1.16.10</span><br><span class="line">  Kube-Proxy Version:         v1.16.10</span><br><span class="line">PodCIDR:                      10.244.0.0/24</span><br><span class="line">PodCIDRs:                     10.244.0.0/24</span><br><span class="line">Non-terminated Pods:          (5 in total)</span><br><span class="line">  Namespace                   Name                                     CPU Requests  CPU Limits  Memory Requests  Memory Limits  AGE</span><br><span class="line">  ---------                   ----                                     ------------  ----------  ---------------  -------------  ---</span><br><span class="line">  kube-system                 etcd-sb-k8s-master                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         33m</span><br><span class="line">  kube-system                 kube-apiserver-sb-k8s-master             250m (3%)     0 (0%)      0 (0%)           0 (0%)         33m</span><br><span class="line">  kube-system                 kube-controller-manager-sb-k8s-master    200m (2%)     0 (0%)      0 (0%)           0 (0%)         33m</span><br><span class="line">  kube-system                 kube-proxy-grpdn                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         33m</span><br><span class="line">  kube-system                 kube-scheduler-sb-k8s-master             100m (1%)     0 (0%)      0 (0%)           0 (0%)         33m</span><br><span class="line">Allocated resources:</span><br><span class="line">  (Total limits may be over 100 percent, i.e., overcommitted.)</span><br><span class="line">  Resource           Requests   Limits</span><br><span class="line">  --------           --------   ------</span><br><span class="line">  cpu                550m (6%)  0 (0%)</span><br><span class="line">  memory             0 (0%)     0 (0%)</span><br><span class="line">  ephemeral-storage  0 (0%)     0 (0%)</span><br><span class="line">  hugepages-2Mi      0 (0%)     0 (0%)</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason                   Age                From                       Message</span><br><span class="line">  ----    ------                   ----               ----                       -------</span><br><span class="line">  Normal  Starting                 33m                kubelet, sb-k8s-master     Starting kubelet.</span><br><span class="line">  Normal  NodeHasNoDiskPressure    33m (x3 over 33m)  kubelet, sb-k8s-master     Node sb-k8s-master status is now: NodeHasNoDiskPressure</span><br><span class="line">  Normal  NodeHasSufficientPID     33m (x3 over 33m)  kubelet, sb-k8s-master     Node sb-k8s-master status is now: NodeHasSufficientPID</span><br><span class="line">  Normal  NodeAllocatableEnforced  33m                kubelet, sb-k8s-master     Updated Node Allocatable limit across pods</span><br><span class="line">  Normal  NodeHasSufficientMemory  33m (x4 over 33m)  kubelet, sb-k8s-master     Node sb-k8s-master status is now: NodeHasSufficientMemory</span><br><span class="line">  Normal  Starting                 33m                kubelet, sb-k8s-master     Starting kubelet.</span><br><span class="line">  Normal  NodeHasSufficientMemory  33m                kubelet, sb-k8s-master     Node sb-k8s-master status is now: NodeHasSufficientMemory</span><br><span class="line">  Normal  NodeHasNoDiskPressure    33m                kubelet, sb-k8s-master     Node sb-k8s-master status is now: NodeHasNoDiskPressure</span><br><span class="line">  Normal  NodeHasSufficientPID     33m                kubelet, sb-k8s-master     Node sb-k8s-master status is now: NodeHasSufficientPID</span><br><span class="line">  Normal  NodeAllocatableEnforced  33m                kubelet, sb-k8s-master     Updated Node Allocatable limit across pods</span><br><span class="line">  Normal  Starting                 32m                kube-proxy, sb-k8s-master  Starting kube-proxy.</span><br></pre></td></tr></tbody></table></figure>

<p>通过 kubectl describe 指令的输出，我们可以看到 NodeNotReady 的原因在于，我们尚未部署任何网络插件，kube-proxy等组件还处于starting状态。<br>另外，我们还可以通过 kubectl 检查这个节点上各个系统 Pod 的状态，其中，kube-system 是 Kubernetes 项目预留的系统 Pod 的工作空间（Namepsace，注意它并不是 Linux Namespace，它只是 Kubernetes 划分不同工作空间的单位）<br>可以看到，CoreDNS依赖于网络的 Pod 都处于 Pending 状态，即调度失败。这当然是符合预期的：因为这个 Master 节点的网络尚未就绪。<br>集群初始化如果遇到问题，可以使用<code>kubeadm reset</code>命令进行清理然后重新执行初始化。</p>
<h3 id="部署网络插件"><a href="#部署网络插件" class="headerlink" title="部署网络插件"></a>部署网络插件</h3><blockquote>
<p>注意：当你通过kubeadm reset重置Master节点之后，需要再次部署flannel<br>要让 Kubernetes Cluster 能够工作，必须安装 Pod 网络，否则 Pod 之间无法通信。<br>Kubernetes 支持多种网络方案，这里我们使用 flannel<br>执行如下命令部署 flannel：</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></tbody></table></figure>
<p>也可手动手动创建yaml文件并致性<br>以下是kube-flannel.yaml内容</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">policy/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PodSecurityPolicy</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">psp.flannel.unprivileged</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">seccomp.security.alpha.kubernetes.io/allowedProfileNames:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="attr">seccomp.security.alpha.kubernetes.io/defaultProfileName:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="attr">apparmor.security.beta.kubernetes.io/allowedProfileNames:</span> <span class="string">runtime/default</span></span><br><span class="line">    <span class="attr">apparmor.security.beta.kubernetes.io/defaultProfileName:</span> <span class="string">runtime/default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">configMap</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">secret</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">emptyDir</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hostPath</span></span><br><span class="line">  <span class="attr">allowedHostPaths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">"/etc/cni/net.d"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">"/etc/kube-flannel"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pathPrefix:</span> <span class="string">"/run/flannel"</span></span><br><span class="line">  <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Users and groups</span></span><br><span class="line">  <span class="attr">runAsUser:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="attr">supplementalGroups:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="attr">fsGroup:</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="comment"># Privilege Escalation</span></span><br><span class="line">  <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">defaultAllowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Capabilities</span></span><br><span class="line">  <span class="attr">allowedCapabilities:</span> [<span class="string">'NET_ADMIN'</span>]</span><br><span class="line">  <span class="attr">defaultAddCapabilities:</span> []</span><br><span class="line">  <span class="attr">requiredDropCapabilities:</span> []</span><br><span class="line">  <span class="comment"># Host namespaces</span></span><br><span class="line">  <span class="attr">hostPID:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hostIPC:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hostPorts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">min:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">max:</span> <span class="number">65535</span></span><br><span class="line">  <span class="comment"># SELinux</span></span><br><span class="line">  <span class="attr">seLinux:</span></span><br><span class="line">    <span class="comment"># SELinux is unused in CaaSP</span></span><br><span class="line">    <span class="attr">rule:</span> <span class="string">'RunAsAny'</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">'extensions'</span>]</span><br><span class="line">    <span class="attr">resources:</span> [<span class="string">'podsecuritypolicies'</span>]</span><br><span class="line">    <span class="attr">verbs:</span> [<span class="string">'use'</span>]</span><br><span class="line">    <span class="attr">resourceNames:</span> [<span class="string">'psp.flannel.unprivileged'</span>]</span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/status</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">cni-conf.json:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    {</span></span><br><span class="line"><span class="string">      "name": "cbr0",</span></span><br><span class="line"><span class="string">      "cniVersion": "0.3.1",</span></span><br><span class="line"><span class="string">      "plugins": [</span></span><br><span class="line"><span class="string">        {</span></span><br><span class="line"><span class="string">          "type": "flannel",</span></span><br><span class="line"><span class="string">          "delegate": {</span></span><br><span class="line"><span class="string">            "hairpinMode": true,</span></span><br><span class="line"><span class="string">            "isDefaultGateway": true</span></span><br><span class="line"><span class="string">          }</span></span><br><span class="line"><span class="string">        },</span></span><br><span class="line"><span class="string">        {</span></span><br><span class="line"><span class="string">          "type": "portmap",</span></span><br><span class="line"><span class="string">          "capabilities": {</span></span><br><span class="line"><span class="string">            "portMappings": true</span></span><br><span class="line"><span class="string">          }</span></span><br><span class="line"><span class="string">        }</span></span><br><span class="line"><span class="string">      ]</span></span><br><span class="line"><span class="string">    }</span></span><br><span class="line"><span class="string"></span>  <span class="attr">net-conf.json:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    {</span></span><br><span class="line"><span class="string">      "Network": "10.244.0.0/16",</span></span><br><span class="line"><span class="string">      "Backend": {</span></span><br><span class="line"><span class="string">        "Type": "vxlan"</span></span><br><span class="line"><span class="string">      }</span></span><br><span class="line"><span class="string">    }</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds-amd64</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/arch</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">amd64</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-amd64</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-amd64</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span> [<span class="string">"NET_ADMIN"</span>]</span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds-arm64</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/arch</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">arm64</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-arm64</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-arm64</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span> [<span class="string">"NET_ADMIN"</span>]</span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds-arm</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/arch</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">arm</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-arm</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-arm</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span> [<span class="string">"NET_ADMIN"</span>]</span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds-ppc64le</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/arch</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">ppc64le</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-ppc64le</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-ppc64le</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span> [<span class="string">"NET_ADMIN"</span>]</span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-flannel-ds-s390x</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">tier:</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">flannel</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">linux</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">kubernetes.io/arch</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span></span><br><span class="line">                      <span class="bullet">-</span> <span class="string">s390x</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line">      <span class="attr">initContainers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install-cni</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-s390x</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">cp</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-flannel</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/coreos/flannel:v0.12.0-s390x</span></span><br><span class="line">          <span class="attr">command:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--ip-masq</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--kube-subnet-mgr</span></span><br><span class="line">          <span class="attr">resources:</span></span><br><span class="line">            <span class="attr">requests:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">            <span class="attr">limits:</span></span><br><span class="line">              <span class="attr">cpu:</span> <span class="string">"100m"</span></span><br><span class="line">              <span class="attr">memory:</span> <span class="string">"50Mi"</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">add:</span> [<span class="string">"NET_ADMIN"</span>]</span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/flannel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">cni</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">flannel-cfg</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">kube-flannel-cfg</span></span><br></pre></td></tr></tbody></table></figure>
<p>部署完成后可查看节点状态</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ kubectl get nodes</span><br><span class="line">sb-k8s-master   Ready   master   35m   v1.16.10</span><br></pre></td></tr></tbody></table></figure>

<h2 id="初始化Worker节点"><a href="#初始化Worker节点" class="headerlink" title="初始化Worker节点"></a>初始化Worker节点</h2><blockquote>
<p>确保Docker已启动同时确保Kubernetes相关安装包安装成功</p>
</blockquote>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 执行Master节点在初始化时打印的命令</span></span><br><span class="line">$ kubeadm <span class="built_in">join</span> 192.168.13.57:6443 --token 9jxb2u.hrx64uts2k9h147d \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:53bbba19451fe2a7d106fbde18e39f8772a3106d6a44b97cfe0653f18fbbd08d</span><br></pre></td></tr></tbody></table></figure>
<p>执行完毕后可以切换至Master节点查看集群状态</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">$ kubectl get nodes</span><br><span class="line">sb-k8s-master   Ready   master   31m   v1.16.10</span><br><span class="line">sb-k8s-node1   Ready   &lt;none&gt;   30m   v1.16.10</span><br></pre></td></tr></tbody></table></figure>

<h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>至此Kubernetes集群部署完毕</p>
<h1 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h1><p><a href="https://v1-16.docs.kubernetes.io/zh/docs/home/">Kubernetes1.16文档</a><br><a href="http://docs.kubernetes.org.cn/774.html">Kubernetes中文社区</a></p>
</body></html>]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>云原生基础设施</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes网络重置</title>
    <url>/2020/06/09/devops/kubernetes/network-reset/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>反复添加节点或者重置节点之后可能会出现Pod一直处于<code>ContainerCreating</code>状态</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ kubectl get pod -o wide</span><br><span class="line">NAME                   READY     STATUS              RESTARTS   AGE       IP           NODE</span><br><span class="line">nginx-1334cf59-jk5pc   0/1       ContainerCreating   0          9m        &lt;none&gt;       node1</span><br><span class="line">nginx-1334cf59-vm9h4   0/1       ContainerCreating   0          9m        &lt;none&gt;       node1</span><br></pre></td></tr></tbody></table></figure>

<p>journalctl查看节点日志</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ journalctl -u kubele</span><br></pre></td></tr></tbody></table></figure>
<p>其中有如下错误</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">Error adding network: failed to <span class="built_in">set</span> bridge addr: <span class="string">"cni0"</span> already has an IP address different from 10.16.2.1/24</span><br></pre></td></tr></tbody></table></figure>

<h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在Node上执行如下操作</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 重置kubernetes服务、网络。移除网络配置</span></span><br><span class="line">kubeadm reset</span><br><span class="line">systemctl stop kubelet</span><br><span class="line">systemctl stop docker</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/cni/</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/kubelet/*</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/cni/</span><br><span class="line">ifconfig cni0 down</span><br><span class="line">ifconfig flannel.1 down</span><br><span class="line">ifconfig docker0 down</span><br><span class="line">ip <span class="built_in">link</span> delete cni0</span><br><span class="line">ip <span class="built_in">link</span> delete flannel.1</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 获取join token</span></span><br><span class="line">$ kubeadm token create --print-join-command</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 加入集群</span></span><br><span class="line">$ kubeadm <span class="built_in">join</span> 192.168.13.57:6443 --token 9jxb2u.hrx64uts2k9h147d \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:53bbba19451fe2a7d106fbde18e39f8772a3106d6a44b97cfe0653f18fbbd08d</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>云原生基础设施</tag>
        <tag>运维</tag>
        <tag>异常解决</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始学习React-----介绍</title>
    <url>/2020/04/30/web/react/react-study-0/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="React简介"><a href="#React简介" class="headerlink" title="React简介"></a>React简介</h1><p>React起源于Facebook的内部项目，因为该公司对市场上所有JavaScript框架，都不满意，就决定自己写一套，用来架设 Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。由于 React 的设计思想极其独特，属于革命性创新，性能出众，代码逻辑却非常简单。所以，越来越多地人开始关注和使用，认为它可能是将来 Web 开发的主流工具。</p>
<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><h2 id="声明式"><a href="#声明式" class="headerlink" title="声明式"></a>声明式</h2><p>React 使创建交互式 UI 变得轻而易举。为你应用的每一个状态设计简洁的视图，当数据改变时 React 能有效地更新并正确地渲染组件。<br>以声明式编写 UI，可以让你的代码更加可靠，且方便调试。</p>
<h2 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h2><p>创建拥有各自状态的组件，再由这些组件构成更加复杂的UI。<br>组件逻辑使用JavaScript编写而非模版，因此你可以轻松地在应用中传递数据，并使得状态与DOM分离。</p>
<h2 id="一次学习，随处编写"><a href="#一次学习，随处编写" class="headerlink" title="一次学习，随处编写"></a>一次学习，随处编写</h2><p>无论你现在正在使用什么技术栈，你都可以随时引入React来开发新特性，而不需要重写现有代码。</p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1></body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>前端</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes 证书更新</title>
    <url>/2021/07/19/devops/kubernetes/ca-certificate-update/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Kubernetes集群无法重启，在检查启动日志后发现如下信息</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">failed to run Kubelet: unable to load bootstrap kubeconfig: stat /etc/kubernetes/bootstrap-kubelet.conf: no such</span><br><span class="line">file or directoryMay  2 11:15:12 master systemd: kubelet.service: main process exited, code=exited, status=255/n/a</span><br></pre></td></tr></tbody></table></figure>

<p>原因是因为集群证书具有一年的有效期，过期后会导致集群无法正常使用</p>
<h1 id="备份旧证书信息"><a href="#备份旧证书信息" class="headerlink" title="备份旧证书信息"></a>备份旧证书信息</h1><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">// 备份原有证书防止更新出现故障</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> -r /etc/kubernetes /etc/kubernetes-bak</span></span><br></pre></td></tr></tbody></table></figure>
<h1 id="查看证书有效期"><a href="#查看证书有效期" class="headerlink" title="查看证书有效期"></a>查看证书有效期</h1><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm alpha certs check-expiration</span></span><br></pre></td></tr></tbody></table></figure>

<h1 id="通过Kubeadm进行更新"><a href="#通过Kubeadm进行更新" class="headerlink" title="通过Kubeadm进行更新"></a>通过Kubeadm进行更新</h1><blockquote>
<p>直接使用现有的Kubeadm命令执行更新（有效期为一年，后续还需要手动处理）</p>
</blockquote>
<h3 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a>更新证书</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm alpha certs renew all</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="应用证书至集群"><a href="#应用证书至集群" class="headerlink" title="应用证书至集群"></a>应用证书至集群</h2><h3 id="更新主节点"><a href="#更新主节点" class="headerlink" title="更新主节点"></a>更新主节点</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">// 删除旧的kubectl配置</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf <span class="variable">$HOME</span>/.kube</span></span><br><span class="line">// 创建目录</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span></span><br><span class="line">// 拷贝新的配置文件</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> -i /etc/kubernetes/admin.conf /root/.kube/config</span></span><br><span class="line"></span><br><span class="line">// 删除旧的Kubernetes配置（请勿删除ca证书）</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf /etc/kubernetes/*.conf</span></span><br><span class="line"></span><br><span class="line">// 重新生成新的配置文件</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm init phase kubeconfig all</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3 id="更新从节点"><a href="#更新从节点" class="headerlink" title="更新从节点"></a>更新从节点</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">// 在主节点执行命令，生成Join链接</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm token create --print-join-command</span></span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">// 从节点备份原有证书配置</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> -r /etc/kubernetes /etc/kubernetes-bak</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf /etc/kubernetes/*.conf</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -rf /etc/kubernetes/pki/ca.crt</span></span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">// 将节点重新添加至集群</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">kubeadm <span class="built_in">join</span> 192.168.13.57:6443 --token 13gplo.puz8pxbrdeh0kmc6     --discovery-token-ca-cert-hash sha256:eda80f7e45c9be1644e7b2a25e91569cf9e64e9cacadd666bc93c84c2fee2f25</span></span><br></pre></td></tr></tbody></table></figure>

<h1 id="修改Kubeadm源码再进行更新"><a href="#修改Kubeadm源码再进行更新" class="headerlink" title="修改Kubeadm源码再进行更新"></a>修改Kubeadm源码再进行更新</h1><blockquote>
<p>修改Kubeadm证书生成部分的源码，再使用命令更新证书</p>
</blockquote>
<h2 id="拉取源码"><a href="#拉取源码" class="headerlink" title="拉取源码"></a>拉取源码</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据实际情况拉取对应分支的源码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> -b release-1.16 git@github.com:kubernetes/kubernetes.git</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">证书相关类入口（可直接看下一行命令）</span></span><br><span class="line">vi kubernetes/cmd/kubeadm/app/util/certs/util.go </span><br><span class="line"></span><br><span class="line">vi kubernetes/cmd/kubeadm/app/constants/constants.go</span><br></pre></td></tr></tbody></table></figure>

<h2 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h2><figure class="highlight go"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 将CertificateValidity修改为指定值（修改为10年）</span></span><br><span class="line">CertificateValidity = time.Hour * <span class="number">24</span> * <span class="number">365</span> * <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">准备Go环境</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubeadm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make WHAT=cmd/kubeadm GOFLAGS=-v</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">补充：编译kubelet</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make all WHAT=cmd/kubelet GOFLAGS=-v</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">补充：编译kubectl</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make all WHAT=cmd/kubectl GOFLAGS=-v</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译生成的二进制文件在 _output/bin/ 目录下</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="替换原有的kubeadm"><a href="#替换原有的kubeadm" class="headerlink" title="替换原有的kubeadm"></a>替换原有的kubeadm</h2><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将kubeadm 文件拷贝替换系统中原有kubeadm，替换之后即可执行证书更新命令</span></span><br><span class="line">cp /usr/bin/kubeadm /usr/bin/kubeadm.origin</span><br><span class="line">cp _output/bin/kubeadm /usr/bin/kubeadm</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>Cloud Native</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>云原生基础设施</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始学习React（一）-----搭建开发环境</title>
    <url>/2020/04/30/web/react/react-study-1/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="搭建NPM环境"><a href="#搭建NPM环境" class="headerlink" title="搭建NPM环境"></a>搭建NPM环境</h2><p>考虑到境外服务器比较慢，这里建议使用阿里的镜像源</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 查看当前源</span><br><span class="line">$ npm config get registry </span><br><span class="line">// 设置指定的源</span><br><span class="line">$ npm config set registry https://registry.npm.taobao.org --global</span><br></pre></td></tr></tbody></table></figure>
<h2 id="搭建React开发环境"><a href="#搭建React开发环境" class="headerlink" title="搭建React开发环境"></a>搭建React开发环境</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 安装create-react-app工具</span><br><span class="line">$ npm install create-react-app -g</span><br><span class="line"></span><br><span class="line">// 通过create-react-app初始化项目</span><br><span class="line">$ create-react-app my-app</span><br><span class="line"></span><br><span class="line">$ cd my-app</span><br><span class="line"></span><br><span class="line">// 运行项目</span><br><span class="line">$ npm start</span><br></pre></td></tr></tbody></table></figure>
<h1 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h1><p>浏览器输入<a href="http://localhost:3000/">http://localhost:3000/</a><br><img src="/images/web/react/react-study-1/1.png"></p>
<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1></body></html>]]></content>
      <categories>
        <category>学习</category>
        <category>前端</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>JVM 虚拟机内存模型</title>
    <url>/2019/08/07/java/jvm/jvm-memory-model/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文中部分内容引用至《深入理解Java虚拟机：JVM高级特性与最佳实践（第2版）》第12章，如果有兴趣可自行深入阅读，文末放有书籍PDF版本连接。</p>
<h1 id="一、物理机中的并发"><a href="#一、物理机中的并发" class="headerlink" title="一、物理机中的并发"></a>一、物理机中的并发</h1><blockquote>
<p>物理机遇到的并发问题其实与虚拟机中的情况有很多相似之处，所以物理机对并发的处理方案对于虚拟机的实现也有比较大的参考意义</p>
</blockquote>
<p>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;“充分的利用计算机效能”和“让计算机并发运行多个任务”之间的关系，看上去是紧密相连的，但是实际上并没有想象中的那么简单，这其中有一个重要的原因在于计算机的大多数任务不能仅仅只依靠处理器去完成，处理器至少需要和内存打交道，比如读取数据、保存结果等，而这一过程中的I/O是无法避免的。由于计算机的存储设备与处理器的运算速度有几个数量级的差距，所以现代计算机系统都不得不加入一层读写速度尽可能接近处理器运算速度的高速缓存（Cache）来作为内存与处理器之间的缓冲：将运算需要使用到的数据复制到缓存中，让运算能快速进行，当运算结束后再从缓存同步回内存之中，这样处理器就无须等待缓慢的内存读写了。<br>&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;但是这样这种情况也带来了另一个问题，“缓存一致性（Cache Coherence）”。</p>
<h2 id="缓存一致性（重要概念）"><a href="#缓存一致性（重要概念）" class="headerlink" title="缓存一致性（重要概念）"></a>缓存一致性<code>（重要概念）</code></h2><p>​		多处理器中，每一个处理器都拥有自己的高速缓存，同时又共享同一主内存，如下图所示</p>
<p><img src="/images/jvm/physical-machine-memory-model.png"></p>
<p>当多个处理器对同一块内存区域进行运算的时候，将可能导致各自的缓存数据不一致，如果发生这种情况，那同步回到主内存时以谁的缓存数据为准呢？为了解决一致性的问题，需要各个处理器访问缓存时都遵循一些协议，在读写时要根据协议来进行操作，这类协 议有MSI、MESI（Illinois Protocol）、MOSI、Synapse、Firefly及Dragon Protocol等。在本中将会多次提到的“内存模型”一词，可以理解为在特定的操作协议下，对特定的内存或高速缓存进行读写访问的过程抽象。不同架构的物理机器可以拥有不一样的内存模型，而Java虚拟机也有自己的内存模型，并且这里介绍的内存访问操作与硬件的缓存访问操作具有很高的可比性。</p>
<p>​		除了增加高速缓存之外，为了使得处理器内部的运算单元能尽量被 充分利用，处理器可能会对输入代码进行乱序执行（Out-Of-Order Execution）优化，处理器会在计算之后将乱序执行的结果重组，保证该 结果与顺序执行的结果是一致的，但并不保证程序中各个语句计算的先 后顺序与输入代码中的顺序一致，因此，如果存在一个计算任务依赖另 外一个计算任务的中间结果，那么其顺序性并不能靠代码的先后顺序来 保证。与处理器的乱序执行优化类似，Java虚拟机的即时编译器中也有 类似的指令重排序（Instruction Reorder）优化。</p>
<h1 id="二、Java内存模型"><a href="#二、Java内存模型" class="headerlink" title="二、Java内存模型"></a>二、Java内存模型</h1><p>​		Java虚拟机规范中试图定义一种Java内存模型（Java Memory Model,JMM）来屏蔽掉各种硬件和操作系统的内存访问差异，以实现让 Java程序在各种平台下都能达到一致的内存访问效果。在此之前，主流程序语言（如C/C++等）直接使用物理硬件和操作系统的内存模型，因此，会由于不同平台上内存模型的差异，有可能导致程序在一套平台上 并发完全正常，而在另外一套平台上并发访问却经常出错，因此在某些场景就必须针对不同的平台来编写程序。</p>
<p>​		定义Java内存模型并非一件容易的事情，这个模型必须定义得足够严谨，才能让Java的并发内存访问操作不会产生歧义；但是，也必须定义得足够宽松，使得虚拟机的实现有足够的自由空间去利用硬件的各种 特性（寄存器、高速缓存和指令集中某些特有的指令）来获取更好的执 行速度。经过长时间的验证和修补，在JDK 1.5（实现了JSR-133）发布后，Java内存模型已经成熟和完善起来了。</p>
<h2 id="1-主内存和工作内存"><a href="#1-主内存和工作内存" class="headerlink" title="1.主内存和工作内存"></a>1.主内存和工作内存</h2><p>​		Java内存模型主要是定义变量的访问规则，通俗的来讲就是Java虚拟机对变量的存、取操作的底层细节。这里所说的变量指的是静态变量、常量、构成数组的元素、实例字段，不包含局部变量和方法参数，两者在Java虚拟机中属于线程私有，不会存在线程安全问题。</p>
<p>​		Java虚拟机为了保持程序执行的高效率，在定义内存模型的同时并没有限制执行引擎使用处理器特定的寄存器或缓存来和主内存交互，也没有限制即时编译器对代码执行顺序进行调整。</p>
<p>​		Java内存模型规定了所有的变量都存储在主内存（Main Memory） 中（此处的主内存与介绍物理硬件时的主内存名字一样，两者也可以互相类比，但此处仅是虚拟机内存的一部分）。每条线程还有自己的工作内存（Working Memory，可与前面讲的处理器高速缓存类比），线程的工作内存中保存了被该线程使用到的变量的主内存副本拷贝，线程 对变量的所有操作（读取、赋值等）都必须在工作内存中进行，而不能直接读写主内存中的变量。不同的线程之间也无法直接访问对方工作 内存中的变量，线程间变量值的传递均需要通过主内存来完成，线程、 主内存、工作内存三者的交互关系如下图所示。</p>
<p><img src="/images/jvm/jvm-memory-model.png"></p>
<p>注意： Java内存模型与内存结构不能混为一谈，内存结构是指Java堆、栈、方法区等</p>
<h2 id="2-JVM的内存操作"><a href="#2-JVM的内存操作" class="headerlink" title="2.JVM的内存操作"></a>2.JVM的内存操作</h2><p>​		Java内存模型定义了以下8种操作，虚拟机实现时需要保证以下操作均是原子的，不可再分的（double和long类型在32位和64位平台上有一定区别需要特别留意）</p>
<ol>
<li>lock（锁定）：作用于主内存的变量，它把一个变量标识为一条线程独占的状态。</li>
<li>unlock（解锁）：作用于主内存的变量，它把一个处于锁定状态的变量释放出来，释放后的变量才可以被其他线程锁定。</li>
<li>read（读取）：作用于主内存的变量，它把一个变量的值从主内存传输到线程的工作内存中，以便随后的load动作使用。</li>
<li>load（载入）：作用于工作内存的变量，它把read操作从主内存中得到的变量值放入工作内存的变量副本中。</li>
<li>use（使用）：作用于工作内存的变量，它把工作内存中一个变量的值传递给执行引擎，每当虚拟机遇到一个需要使用到变量的值的字节 码指令时将会执行这个操作。</li>
<li>assign（赋值）：作用于工作内存的变量，它把一个从执行引擎接收到的值赋给工作内存的变量，每当虚拟机遇到一个给变量赋值的字节 码指令时执行这个操作。</li>
<li>store（存储）：作用于工作内存的变量，它把工作内存中一个变量的值传送到主内存中，以便随后的write操作使用。</li>
<li>write（写入）：作用于主内存的变量，它把store操作从工作内存中得到的变量的值放入主内存的变量中。</li>
</ol>
<p>​		如果要把一个变量从主内存复制到工作内存，那就要顺序地执行 read和load操作，如果要把变量从工作内存同步回主内存，就要顺序地 执行store和write操作。注意，Java内存模型只要求上述两个操作必须按 顺序执行，而没有保证是连续执行。也就是说，read与load之间、store 与write之间是可插入其他指令的，如对主内存中的变量a、b进行访问 时，一种可能出现顺序是read a、read b、load b、load a。除此之外， Java内存模型还规定了在执行上述8种基本操作时必须满足如下规则：</p>
<ul>
<li>不允许read和load、store和write操作之一单独出现，即不允许一个变量从主内存读取了但工作内存不接受，或者从工作内存发起回写了但主内存不接受的情况出现。</li>
<li>不允许一个线程丢弃它的最近的assign操作，即变量在工作内存中改变了之后必须把该变化同步回主内存。</li>
<li>不允许一个线程无原因地（没有发生过任何assign操作）把数据从线程的工作内存同步回主内存中。</li>
<li>一个新的变量只能在主内存中“诞生”，不允许在工作内存中直接使用一个未被初始化（load或assign）的变量，换句话说，就是对一个变 量实施use、store操作之前，必须先执行过了assign和load操作。</li>
<li>一个变量在同一个时刻只允许一条线程对其进行lock操作，但lock操作可以被同一条线程重复执行多次，多次执行lock后，只有执行相同 次数的unlock操作，变量才会被解锁。</li>
<li>如果对一个变量执行lock操作，那将会清空工作内存中此变量的值，在执行引擎使用这个变量前，需要重新执行load或assign操作初始 化变量的值。</li>
<li>如果一个变量事先没有被lock操作锁定，那就不允许对它执行unlock操作，也不允许去unlock一个被其他线程锁定住的变量。</li>
<li>对一个变量执行unlock操作之前，必须先把此变量同步回主内存中（执行store、write操作）。</li>
</ul>
<h2 id="3-特殊的volatile类型"><a href="#3-特殊的volatile类型" class="headerlink" title="3.特殊的volatile类型"></a>3.特殊的volatile类型</h2><p>​		Java虚拟机为volatile类型定义了一些特有的规则，当一个变量定义为volatile之后，它将具备两种特性，第一是保证此变量对所有线程的可见性，这里的“可见性”是指当一条线程修改了这个变量的值，新值对于其他线程来说是可以立即得知的。而普通变量不能做到这一点，普通变量的值在线程间传递均需要通过主内存来完成，例如，线程A修改一个普通变量的值，然后向主内存进行回写，另外一条 线程B在线程A回写完成了之后再从主内存进行读取操作，新变量值才会对线程B可见。</p>
<p>​		同时volatile对于很多人而言存在很多误解，其中有很多人认为<code>volatile修饰的变量对内存是立即可见的所以自然而然的认为是线程安全的</code>，然而这个观点是存在一定问题的。volatile修饰的变量对所有线程可见，但是变量本身的修改操作并不是原子性操作，这就导致volatile变量在多线程情况下并不一定是线程安全的，请看一下例子</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VolatileTest</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="type">int</span> total;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">THREAD_COUNT</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">increase</span><span class="params">()</span> {</span><br><span class="line">        total++;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException {</span><br><span class="line">        total = <span class="number">0</span>;</span><br><span class="line">        <span class="type">CountDownLatch</span> <span class="variable">countDownLatch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(THREAD_COUNT);</span><br><span class="line">        Thread[] threads = <span class="keyword">new</span> <span class="title class_">Thread</span>[THREAD_COUNT];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; THREAD_COUNT; i++) {</span><br><span class="line">            threads[i] = <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() {</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> {</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>; a &lt; <span class="number">100</span>; a++) {</span><br><span class="line">                        increase();</span><br><span class="line">                    }</span><br><span class="line">                    countDownLatch.countDown();</span><br><span class="line">                }</span><br><span class="line">            });</span><br><span class="line">            threads[i].start();</span><br><span class="line">        }</span><br><span class="line">        countDownLatch.await();</span><br><span class="line">        System.out.println(total);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>这段代码启动了10个线程，每个线程执行100次累加，那么预期的输出应该为1000，但是当你实际执行之后会发现每次输出的结果大多数是小于1000，且每次输出的结果都不一样。造成这个问题的原因出现在total++，利用javap可以查看关键部分字节码指令，如下：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">public static void increase();</span><br><span class="line">   descriptor: ()V</span><br><span class="line">   flags: ACC_PUBLIC, ACC_STATIC</span><br><span class="line">   Code:</span><br><span class="line">     stack=2, locals=0, args_size=0</span><br><span class="line">        0: getstatic     #2                  // Field total:I</span><br><span class="line">        3: iconst_1</span><br><span class="line">        4: iadd</span><br><span class="line">        5: putstatic     #2                  // Field total:I</span><br><span class="line">        8: return</span><br><span class="line">     LineNumberTable:</span><br><span class="line">       line 10: 0</span><br><span class="line">       line 11: 8</span><br></pre></td></tr></tbody></table></figure>

<p>volatile保证了getstatic操作获取的值是正确的，但是在执行iconst_1（栈指令，入栈），iadd过程中，其他线程有可能已经计算完毕并且将数据更新到主内存中，这样就导致当前线程所拥有的的数据变成了<code>过期数据</code>，而后putstatic操作则会将过期数据更新至主内存。当所有线程执行完毕后，total的值便会小于预期数。</p>
<p>​		由于volatile变量只能保证可见性，所以在实际运用中还需要遵循以下规则：</p>
<ul>
<li>运算结果并不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值。</li>
<li>变量不需要与其他的状态变量共同参与不变约束。</li>
</ul>
<p>​		不过在下面这种情况中，volatile变量就非常适合</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VolatileDemo</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="type">boolean</span> stop;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">while</span> (!stop) {</span><br><span class="line">            <span class="comment">// do something</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span>{</span><br><span class="line">        stop=<span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>由于volatile变量对所有线程保持可见性，当变量被赋值为true时，就会停止循环，而在赋值的过程中没有出现非原子性操作，所以这种方法是可靠并且安全的。</p>
<h2 id="4-long和double变量的特殊规则"><a href="#4-long和double变量的特殊规则" class="headerlink" title="4.long和double变量的特殊规则"></a>4.long和double变量的特殊规则</h2><p>​		Java内存模型要求lock、unlock、read、load、assign、use、store、 write这8个操作都具有原子性，但是对于64位的数据类型（long和 double），在模型中特别定义了一条相对宽松的规定：允许虚拟机将没有被volatile修饰的64位数据的读写操作划分为两次32位的操作来进行， 即允许虚拟机实现选择可以不保证64位数据类型的load、store、read和 write这4个操作的原子性，这点就是所谓的long和double的非原子性协定 （Nonatomic Treatment ofdouble and long Variables）。</p>
<p>​		如果有多个线程共享一个并未声明为volatile的long或double类型的 变量，并且同时对它们进行读取和修改操作，那么某些线程可能会读取 到一个既非原值，也不是其他线程修改值的代表了“半个变量”的数值。</p>
<p>​		不过这种读取到“半个变量”的情况非常罕见（在目前商用Java虚拟机中不会出现），因为Java内存模型虽然允许虚拟机不把long和double 变量的读写实现成原子操作，但允许虚拟机选择把这些操作实现为具有原子性的操作，而且还“强烈建议”虚拟机这样实现。在实际开发中，目前各种平台下的商用虚拟机几乎都选择把64位数据的读写操作作为原子操作来对待，因此我们在编写代码时一般不需要把用到的long和double 变量专门声明为volatile。</p>
<h2 id="5-原子性、可见性与有序性"><a href="#5-原子性、可见性与有序性" class="headerlink" title="5.原子性、可见性与有序性"></a>5.原子性、可见性与有序性</h2><p>Java内存模型围绕着并发过程中如何处理原子性、可见性和顺序性这三个特征来设计的。</p>
<h3 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h3><p>​		由Java内存模型来直接保证的原子性变量操作包括read、load、assign、use、store和write，我们大致可以认为基本数据类型的访问读写是具备原子性的（例外就是long和double的非原子性协定，读者只要知道这件事情就可以了，无须太过在意这些几乎不会发生的例外情况）。</p>
<h3 id="可见性"><a href="#可见性" class="headerlink" title="可见性"></a>可见性</h3><p>​		可见性是指当一个线程修改了共享变量的 值，其他线程能够立即得知这个修改。上文在讲解volatile变量的时候我们已详细讨论过这一点。Java内存模型是通过在变量修改后将新值同步回主内存，在变量读取前从主内存刷新变量值这种依赖主内存作为传递媒介的方式来实现可见性的，无论是普通变量还是volatile变量都是如此，普通变量与volatile变量的区别是，volatile的特殊规则保证了新值能立即同步到主内存，以及每次使用前立即从主内存刷新。因此，可以说 volatile保证了多线程操作时变量的可见性，而普通变量则不能保证这一 点。</p>
<h3 id="有序性"><a href="#有序性" class="headerlink" title="有序性"></a>有序性</h3><p>​		Java内存模型的有序性在前面讲解volatile时 也详细地讨论过了，Java程序中天然的有序性可以总结为一句话：如果 在本线程内观察，所有的操作都是有序的；如果在一个线程中观察另一 个线程，所有的操作都是无序的。前半句是指“线程内表现为串行的语 义”（Within-Thread As-If-Serial Semantics），后半句是指“指令重排 序”现象和“工作内存与主内存同步延迟”现象。</p>
<h2 id="6-并发先行原则"><a href="#6-并发先行原则" class="headerlink" title="6.并发先行原则"></a>6.并发先行原则</h2><p>​		如果Java内存模型中所有的有序性都仅仅靠volatile和synchronized来完成，那么有一些操作将会变得很烦琐，但是我们在编写Java并发代码 的时候并没有感觉到这一点，这是因为Java语言中有一个“先行发 生”（happens-before）的原则。这个原则非常重要，它是判断数据是否 存在竞争、线程是否安全的主要依据，依靠这个原则，我们可以通过几条规则一揽子地解决并发环境下两个操作之间是否可能存在冲突的所有问题。</p>
<p>​		先行发生是Java内存模 型中定义的两项操作之间的偏序关系，如果说操作A先行发生于操作 B，其实就是说在发生操作B之前，操作A产生的影响能被操作B观察到，“影响”包括修改了内存中共享变量的值、发送了消息、调用了方法等。可通过以下伪代码理解：</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//以下操作在线程A中执行</span></span><br><span class="line">a=<span class="number">1</span>；</span><br><span class="line"><span class="comment">//以下操作在线程B中执行</span></span><br><span class="line">b=a；</span><br><span class="line"><span class="comment">//以下操作在线程C中执行</span></span><br><span class="line">a=<span class="number">2</span>；</span><br></pre></td></tr></tbody></table></figure>

<p>假设线程A中的操作”a=1”先行发生于线程B的操作”b=a”，那么可以 确定在线程B的操作执行后，变量b的值一定等于1，得出这个结论的依 据有两个：一是根据先行发生原则，”a=1”的结果可以被观察到；二是线 程C还没“登场”，线程A操作结束之后没有其他线程会修改变量a的值。 现在再来考虑线程C，我们依然保持线程A和线程B之间的先行发生关系，而线程C出现在线程A和线程B的操作之间，但是线程C与线程B没有先行发生关系，那b的值会是多少呢？答案是不确定！1和2都有可能，因为线程C对变量a的影响可能会被线程B观察到，也可能不会，这时候线程B就存在读取到过期数据的风险，不具备线程安全性。</p>
<p>​		以下是Java内存模型与生俱来的<code>先行发生关系</code>：</p>
<ul>
<li>程序次序规则（Program Order Rule）：在一个线程内，按照程序代码顺序，书写在前面的操作先行发生于书写在后面的操作。准确地说， 应该是控制流顺序而不是程序代码顺序，因为要考虑分支、循环等结构。</li>
<li>管程锁定规则（Monitor Lock Rule）：一个unlock操作先行发生于后面对同一个锁的lock操作。这里必须强调的是同一个锁，而“后面”是 指时间上的先后顺序。</li>
<li>volatile变量规则（Volatile Variable Rule）：对一个volatile变量的写操作先行发生于后面对这个变量的读操作，这里的“后面”同样是指时间 上的先后顺序。</li>
<li>线程启动规则（Thread Start Rule）：Thread对象的start()方法先行 发生于此线程的每一个动作。</li>
<li>线程终止规则（Thread Termination Rule）：线程中的所有操作都先 行发生于对此线程的终止检测，我们可以通过Thread.join()方法结束、 Thread.isAlive()的返回值等手段检测到线程已经终止执行。</li>
<li>线程中断规则（Thread Interruption Rule）：对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断事件的发生，可以通过 Thread.interrupted()方法检测到是否有中断发生。</li>
<li>对象终结规则（Finalizer Rule）：一个对象的初始化完成（构造函 数执行结束）先行发生于它的finalize()方法的开始。</li>
<li>传递性（Transitivity）：如果操作A先行发生于操作B，操作B先行发生于操作C，那就可以得出操作A先行发生于操作C的结论。</li>
</ul>
<h1 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h1><p>《深入理解Java虚拟机：JVM高级特性与最佳实践（第2版）》</p>
<p>链接：<a href="https://pan.baidu.com/s/10-g7DxVx95TwgNJNF4_Y4A">https://pan.baidu.com/s/10-g7DxVx95TwgNJNF4_Y4A</a><br>提取码：gm27<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>
</body></html>]]></content>
      <categories>
        <category>Java</category>
        <category>JVM</category>
      </categories>
      <tags>
        <tag>JVM</tag>
        <tag>内存模型</tag>
      </tags>
  </entry>
  <entry>
    <title>SkyWalking链路追踪系统</title>
    <url>/2020/04/11/devops/skywalking/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在微服务开发如火如荼的今天，微服务也引入了一些额外问题。微服务开发&amp;运维过程中会经常调用到其他服务暴露的接口，项目足够大时，内部调用会非常复杂，这种复杂性会导致很难去定位问题，出现问题的时候容易互相推诿进而导致效率低下，所以需要在微服务构建的系统中引入服务调用链路追踪工具，方便开发人员快速定位问题。</p>
<h1 id="解决方案对比"><a href="#解决方案对比" class="headerlink" title="解决方案对比"></a>解决方案对比</h1><p>目前市面上比较流行的链路追踪工具有Zipkin、CAT、Pinpoint、SkyWalking等等</p>
<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><ul>
<li>Zipkin是Twitter开源的调用链分析工具，目前基于SpringCloud Sleuth得到了广泛的使用，轻量，使用部署简单。</li>
<li>SkyWalking是本土开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多种插件，UI友好，非侵入式接入。目前已加入Apache孵化器。</li>
<li>CAT是大众点评开源的基于编码和配置的调用链分析，应用监控分析，日志采集，监控报警等一系列的监控平台工具。</li>
<li>Pinpoint是韩国开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多种插件，UI功能强大，接入端无代码侵入。</li>
</ul>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><blockquote>
<p>截止至2020/04/20</p>
</blockquote>
<table>
<thead>
<tr>
<th>类别</th>
<th>SkyWalking</th>
<th>CAT</th>
<th>Zipkin</th>
<th>Pinpoint</th>
</tr>
</thead>
<tbody><tr>
<td>可视化界面</td>
<td>是</td>
<td>是</td>
<td>是</td>
<td>是</td>
</tr>
<tr>
<td>报表</td>
<td>丰富</td>
<td>很丰富</td>
<td>近似于无</td>
<td>有</td>
</tr>
<tr>
<td>接入方式</td>
<td>非侵入式</td>
<td>侵入式</td>
<td>侵入式</td>
<td>非侵入式</td>
</tr>
<tr>
<td>UI是否友好</td>
<td>是</td>
<td>是</td>
<td>否</td>
<td>是</td>
</tr>
<tr>
<td>颗粒度</td>
<td>方法级</td>
<td>代码级</td>
<td>接口级</td>
<td>方法级</td>
</tr>
<tr>
<td>数据存储</td>
<td>ES，H2</td>
<td>mysql,hdfs</td>
<td>ES，mysql,Cassandra,内存</td>
<td>Hbase</td>
</tr>
<tr>
<td>社区活跃度</td>
<td>13.1k star</td>
<td>13.1k star</td>
<td>12.7k star</td>
<td>10.2k star</td>
</tr>
<tr>
<td>实现方式</td>
<td>拦截请求，发送（HTTP，mq）数据至zipkin服务</td>
<td>java探针，字节码增强</td>
<td>java探针，字节码增强</td>
<td>代码埋点（拦截器，注解，过滤器等）</td>
</tr>
</tbody></table>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><blockquote>
<p>ElasticSearch7 API变更比较多，故官网拆分出两个包，可根据ElasticSearch版本选择下载<br><a href="http://skywalking.apache.org/zh/downloads/">下载页</a><br><a href="https://www.apache.org/dyn/closer.cgi/skywalking/7.0.0/apache-skywalking-apm-7.0.0.tar.gz">SkyWalking 7.0.0</a><br><a href="https://www.apache.org/dyn/closer.cgi/skywalking/7.0.0/apache-skywalking-apm-es7-7.0.0.tar.gz">SkyWalking 7.0.0-ES7版本</a></p>
</blockquote>
<h2 id="所有历史版本"><a href="#所有历史版本" class="headerlink" title="所有历史版本"></a>所有历史版本</h2><ul>
<li>可以在<a href="https://archive.apache.org/dist/skywalking/">归档库</a>中，找到SkyWalking所有的历史发布版本</li>
<li><a href="http://skywalking.apache.org/zh/downloads/ttps://archive.apache.org/dist/incubator/skywalking/">孵化器阶段发行版归档库</a>包含SkyWalking还在孵化器时的发布版本。</li>
</ul>
<h1 id="安装-amp-启动"><a href="#安装-amp-启动" class="headerlink" title="安装&amp;启动"></a>安装&amp;启动</h1><ol>
<li>将下载好的压缩包解压至用户目录<img src="/images/develop/skywalking/1.png"></li>
<li>修改config/application.yml修改配置，由于我本地安装的是ES7版本，故将储存引擎由默认的H2修改为ElasticSearch7<br><img src="/images/develop/skywalking/2.png"></li>
<li>启动SkyWalking之前确保ElasticSearch服务启动成功，然后执行oapService.bat（linux下执行oapService.sh）再执行webappService.bat（webappService.sh）,或者直接执行startup.bat（startup.sh）</li>
<li>确保启动无误之后浏览器访问<a href="http://localhost:8080/">localhost:8080</a>)<blockquote>
<p>端口可在webapp/webapp.yml中修改</p>
</blockquote>
</li>
</ol>
<p><img src="/images/develop/skywalking/3.png"></p>
<h1 id="Java接入"><a href="#Java接入" class="headerlink" title="Java接入"></a>Java接入</h1><p>将skywalking根目录下的agent目录拷贝至用户目录，新建一个spring-boot项目，<br>在启动JVM参数中添加以下配置</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">-javaagent:D:\Apache-Skywalking\agent\skywalking-agent.jar</span><br><span class="line">-Dskywalking.agent.service_name=你的项目名</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/images/develop/skywalking/4.png"><br>启动项目，并访问一个接口可以看到如下拓扑图</p>
<blockquote>
<p>本地新建了一个服务，如果是微服务项目服务间调用会非常明显的展示出来</p>
</blockquote>
<p><img src="/images/develop/skywalking/5.png"></p>
<h1 id="SkyWalking-UI简单介绍"><a href="#SkyWalking-UI简单介绍" class="headerlink" title="SkyWalking UI简单介绍"></a>SkyWalking UI简单介绍</h1><h2 id="性能监控图标"><a href="#性能监控图标" class="headerlink" title="性能监控图标"></a>性能监控图标</h2><p><img src="/images/develop/skywalking/6.png"></p>
<h2 id="JVM信息"><a href="#JVM信息" class="headerlink" title="JVM信息"></a>JVM信息</h2><p><img src="/images/develop/skywalking/7.png"></p>
<h2 id="链路追踪"><a href="#链路追踪" class="headerlink" title="链路追踪"></a>链路追踪</h2><p><img src="/images/develop/skywalking/8.png"></p>
</body></html>]]></content>
      <categories>
        <category>DevOps</category>
        <category>APM</category>
      </categories>
      <tags>
        <tag>云原生基础设施</tag>
        <tag>运维</tag>
        <tag>链路追踪</tag>
        <tag>性能监控</tag>
        <tag>预警</tag>
      </tags>
  </entry>
  <entry>
    <title>常用正则表达式</title>
    <url>/2019/11/15/web/other/common-regular-expressions/</url>
    <content><![CDATA[<html><head></head><body></body></html><html><head></head><body><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>会不定期更新，如果有问题可文末留言。其中验证类和文字处理类的表达式本质上可以通用，请灵活应对。</p>
<h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">// 验证值是否合法</span><br><span class="line">function validate(value) {</span><br><span class="line">    if(value !== "" &amp;&amp; !/^\d+(\.\d+)?$/.test(value)){</span><br><span class="line">        console.log("请输入数字")</span><br><span class="line">    }else{</span><br><span class="line">        // do something</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 去掉字符串首尾的空格</span><br><span class="line">function process(value) {</span><br><span class="line">    if(value){</span><br><span class="line">        return "";</span><br><span class="line">    } else {</span><br><span class="line">        return String(value).replace(/^\s+|\s+$/g, '')</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h1 id="一、验证类"><a href="#一、验证类" class="headerlink" title="一、验证类"></a>一、验证类</h1><h2 id="验证手机号码"><a href="#验证手机号码" class="headerlink" title="验证手机号码"></a>验证手机号码</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^[1][3-9][0-9]{9}$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证联系电话（手机号码和固定电话）"><a href="#验证联系电话（手机号码和固定电话）" class="headerlink" title="验证联系电话（手机号码和固定电话）"></a>验证联系电话（手机号码和固定电话）</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^([1]\d{10}|([(（]?0[0-9]{2,3}[）)]?[-]?)?([2-9][0-9]{6,7})+(-[0-9]{1,4})?)$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证只能存在字母和下划线"><a href="#验证只能存在字母和下划线" class="headerlink" title="验证只能存在字母和下划线"></a>验证只能存在字母和下划线</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^([a-zA-z_]{1})([\w]*)$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证只能存在数字和字母"><a href="#验证只能存在数字和字母" class="headerlink" title="验证只能存在数字和字母"></a>验证只能存在数字和字母</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^[A-Za-z0-9]+$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证固定电话"><a href="#验证固定电话" class="headerlink" title="验证固定电话"></a>验证固定电话</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^(\(\d{3,4}\)|\d{3,4}-|\s)?\d{7,14}$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证电子邮箱"><a href="#验证电子邮箱" class="headerlink" title="验证电子邮箱"></a>验证电子邮箱</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证中文字符"><a href="#验证中文字符" class="headerlink" title="验证中文字符"></a>验证中文字符</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/[^\u4E00-\u9FA5]/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证邮政编码"><a href="#验证邮政编码" class="headerlink" title="验证邮政编码"></a>验证邮政编码</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^[1-9][0-9]{5}$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证纯数字"><a href="#验证纯数字" class="headerlink" title="验证纯数字"></a>验证纯数字</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^\d+(\.\d+)?$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证正数"><a href="#验证正数" class="headerlink" title="验证正数"></a>验证正数</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^(0|[1-9][0-9]*)(\.\d+)?$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证字符串首尾空格"><a href="#验证字符串首尾空格" class="headerlink" title="验证字符串首尾空格"></a>验证字符串首尾空格</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^[\s ]|[ ]$/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证特殊符号"><a href="#验证特殊符号" class="headerlink" title="验证特殊符号"></a>验证特殊符号</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/[`~!@#$^&amp;*()=|{}':;',\\[\].&lt;&gt;/?~！@#￥……&amp;*（）——|{}【】‘；：”“'。，、？]/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证日期格式"><a href="#验证日期格式" class="headerlink" title="验证日期格式"></a>验证日期格式</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/\d{4}(\\-|\/|.)\d{1,2}\1\d{1,2}/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="验证IP地址"><a href="#验证IP地址" class="headerlink" title="验证IP地址"></a>验证IP地址</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/\d+\.\d+\.\d+\.\d+/</span><br></pre></td></tr></tbody></table></figure>

<h2 id="身份证"><a href="#身份证" class="headerlink" title="身份证"></a>身份证</h2><ul>
<li>15位身份证<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}$/ </span><br></pre></td></tr></tbody></table></figure></li>
<li>16位身份证<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">/^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<h1 id="二、文字处理类"><a href="#二、文字处理类" class="headerlink" title="二、文字处理类"></a>二、文字处理类</h1><h2 id="去首尾空格"><a href="#去首尾空格" class="headerlink" title="去首尾空格"></a>去首尾空格</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">let str = " 12 "</span><br><span class="line">String(str).replace(/^\s+|\s+$/g, ''); // 12</span><br></pre></td></tr></tbody></table></figure>
</body></html>]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>正则</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
</search>
